name: Test and deploy

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  testing_stage:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      DB_HOST: 127.0.0.1

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"

    - name: Restore pip cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel
        pip install -r requirements.txt

    - name: Run migrations
      run: |
        cd notifier
        python manage.py migrate

    - name: Test with pytest
      run: pytest --cov=./ --cov-report=xml

    - name: Codecov
      uses: codecov/codecov-action@v1.0.13
      with:
        file: ./coverage.xml

    - name: Lint with flake8
      run: flake8

#  TODO: push to dockerhub?
#  deploy_stage:
#    needs: testing_stage
#    runs-on: ubuntu-latest
